# Project Memory: Shadcn Sidebar Project (v0.0.5)

## Project Overview
- Project Name: rm-sidebar-08
- Current Version: v0.0.5
- Stack:
  - Next.js 15.0.3
  - React 19 RC
  - TypeScript
  - Tailwind CSS
  - Shadcn UI components
  - next-themes (for theme management)

## Project Structure and Components
1. Core Components:
   - Dashboard layout with responsive sidebar
   - Theme-aware color system with dark mode support
   - Shadcn UI integration
   - Theme toggle with system preference support
   - Custom font implementation (Euclid Circular B with Geist fallback)

2. Key Files:
   - `/src/app/dashboard/page.tsx`: Main dashboard page
   - `/src/app/layout.tsx`: Root layout with font configuration
   - `/src/app/fonts/`: Font files directory (Euclid Circular B, Geist)
   - `/src/components/app-sidebar.tsx`: Primary sidebar component
   - `/src/components/nav-*.tsx`: Navigation components
   - `/src/components/ui/*.tsx`: Shadcn UI components
   - `/src/components/providers.tsx`: Client-side theme provider
   - `/src/components/theme-toggle.tsx`: Theme toggle component
   - `/src/hooks/use-mobile.tsx`: Mobile detection hook
   - `/src/lib/utils.ts`: Utility functions
   - `/middleware.ts`: Supabase auth middleware

## Font System
1. Primary Font: Euclid Circular B
   - Weights: Light (300), Regular (400), Medium (500), SemiBold (600), Bold (700)
   - Implemented as variable font with font-display: swap
   - Available via 'font-sans' utility class

2. Fallback Fonts:
   - Geist Sans: Available via 'font-geist' utility class
   - Geist Mono: Used for monospace text via 'font-mono'

## Development Environment
- Development Server: localhost:3001
- Build System: Turbopack
- Git Repository: Initialized with key commits:
  1. Latest: Font system implementation (Euclid Circular B)
  2. Theme toggle size adjustment
  3. Dark mode implementation
  4. Initial sidebar implementation
  5. Project setup

## Local Development Tools
1. AgentTools Directory:
   - `google_search.py`: Implemented Google search functionality
   - `perplexity_search.py`: Placeholder for Perplexity search
   Both files are local development tools, not tracked in git

2. Configuration:
   - `.windsurfrules`: Local configuration for Windsurf IDE tools
   - `.gitignore`: Configured to exclude development-specific files

## Current State
1. Completed Features:
   - Basic dashboard layout
   - Responsive sidebar implementation
   - Full dark mode implementation with next-themes
   - Theme toggle with system preference support
   - Basic navigation components
   - Custom font system with Euclid Circular B

2. Recent Font System Implementation:
   - Added Euclid Circular B as primary font
   - Maintained Geist Sans/Mono as fallback options
   - Configured proper font loading with display: swap
   - Updated Tailwind configuration for font families
   - Removed hardcoded Arial font family

3. Pending Tasks:
   - Fine-tune theme transition animations
   - Add theme-specific color palettes
   - Dashboard layout enhancements

## Development Guidelines
1. Code Standards:
   - Prioritize server components
   - Ensure accessibility compliance
   - Maintain type safety (TypeScript)
   - Focus on performance optimization
   - Prevent hydration mismatches

2. Documentation Requirements:
   - Plain English descriptions
   - Technical documentation
   - Version tracking in README and package.json

## Recent Changes
1. Version Management:
   - Updated from v0.0.4 to v0.0.5
   - Added Euclid Circular B font system
   - Maintained Geist fonts as fallback
   - Improved font loading with display: swap

2. Technical Updates:
   - Implemented new font system
   - Updated Tailwind configuration
   - Removed hardcoded font families
   - Optimized font loading strategy

## Notes for Next Agent
1. Current Focus:
   - Font system is implemented and functional
   - Both Euclid and Geist fonts are available
   - Consider adding more font weights if needed

2. Important Considerations:
   - Project uses latest Next.js and React RC versions
   - Font files are stored in /src/app/fonts/
   - Font loading uses display: swap for better UX
   - Follow established TypeScript patterns

3. Development Environment:
   - Ensure font loading across different devices
   - Test font fallback scenarios
   - Verify font weights in different contexts
